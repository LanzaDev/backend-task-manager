generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER  @map("user")
  ADMIN @map("admin")
}

enum TaskStatus {
  PENDING     @map("pending")
  IN_PROGRESS @map("in_progress")
  COMPLETED   @map("completed")
  CANCELLED   @map("cancelled")
  OVERDUE     @map("overdue")
}

model User {
  id                String              @id @default(uuid())
  name              String
  email             String              @unique
  password          String
  role              Role                @default(USER)
  isVerified        Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  tasks             Task[]
  VerificationToken VerificationToken[]
}

model Task {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String?
  status      TaskStatus @default(PENDING)
  priority    Int?
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  completedAt DateTime?
}

model VerificationToken {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  token     String    @unique
  expiresAt DateTime
  isUsed    Boolean   @default(false)
  createdAt DateTime  @default(now())
  usedAt    DateTime?

  @@index([userId])
  @@index([token])
}
